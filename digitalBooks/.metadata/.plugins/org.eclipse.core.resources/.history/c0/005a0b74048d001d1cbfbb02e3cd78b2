package com.digitalbooks.bookService;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.List;
import java.util.stream.Collectors;

import org.mockito.InjectMocks;
import org.mockito.Mock;

import com.digitalbooks.bookService.common.BookCategory;
import com.digitalbooks.bookService.entity.Book;
import com.digitalbooks.bookService.mockData.MockData;
import com.digitalbooks.bookService.repository.BookRepository;

public class BookServiceTest {
	
	@InjectMocks
	@Mock
	BookRepository bookRepository;
	
	MockData mockdata = new MockData();
	//@Test
	void searchBooksTest() {
		List<Book> books = mockdata.books.stream()
				.filter(book -> book.getCategory().equals("COMIC"))
				.collect(Collectors.toList());
		when(bookRepository.findByTitleIgnoreCaseOrCategoryOrPriceOrAuthorId("title",
				BookCategory.COMIC, 100.33, 1)).thenReturn(books);
		assertEquals(bookRepository.findByTitleIgnoreCaseOrCategoryOrPriceOrAuthorId("title", BookCategory.COMIC, 100.33,1), books);
		
		
		
	}
}
