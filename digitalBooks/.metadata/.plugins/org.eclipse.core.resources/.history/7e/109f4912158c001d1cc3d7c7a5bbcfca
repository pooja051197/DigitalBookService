package com.digitalbooks.bookService.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.digitalbooks.bookService.entity.Book;
import com.digitalbooks.bookService.services.AuthorService;

@RestController
@RequestMapping("/api/v1/digitalbooks/")
public class AuthorController {

	@Autowired
	private AuthorService authService;
	
	@PostMapping("/{authorid}/books")
	public Book createBook(@PathVariable int authorid, @RequestBody Book book) {
		
		return authService.save(authorid,book) ;
		
	}
	
	@PutMapping("/{authorid}/book/{bookId}/")
	public ResponseEntity<Book> editBook(@PathVariable int authorid, @PathVariable int bookId, @RequestBody Book book) {
		
	Book editBook =  authService.editBook(authorid,bookId, book) ;
		if (editBook != null) {
			return new ResponseEntity<Book>(editBook, HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		
	}
	
	@PostMapping("/{authorid}/book/{bookId}/block=yes")
	public ResponseEntity<Book> blockBook(@PathVariable int authorid, @PathVariable int bookId, @RequestBody Book book) {
		
	Book book1 =  authService.blockBook(authorid,bookId, book) ;
		if (book1 != null) {
			return new ResponseEntity<Book>(book1, HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		
	}
}
